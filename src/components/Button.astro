---
interface Props {
	id: string;
	size?: 'sm' | 'md' | 'lg';
	disabled: boolean;
}

const { size = 'md', id, disabled } = Astro.props;

const height = {
	sm: 'h-6',
	md: 'h-8',
	lg: 'h-10',
};
---

<button
	id={id}
	disabled={disabled}
	class={`neu-button px-8 px-4 disabled:bg-none bg-gradient-to-br from-cyan-600 to-purple-600 font-black ${height[size]}`}
>
	<slot />
</button>

<style>
	.neu-button {
		display: flex;
		-webkit-box-pack: center;
		-ms-flex-pack: center;
		justify-content: center;
		cursor: pointer;
		-webkit-box-align: center;
		-ms-flex-align: center;
		align-items: center;
		border: solid #404c5d 1px;
		font-size: 16px;
		color: #d6d6d6;
		-webkit-transition: 500ms;
		transition: 500ms;
		border-radius: 5px;
		-webkit-box-shadow:
			4px 4px 16px rgb(0, 0, 0, 0.4),
			-4px -4px 16px rgb(255, 255, 255, 0.4);
		box-shadow:
			4px 4px 16px rgb(0, 0, 0, 0.4),
			-4px -4px 16px rgb(255, 255, 255, 0.4);
	}

	.neu-button:not(:disabled):hover {
		-webkit-box-shadow:
			2px 2px 14px rgb(0, 0, 0, 0.5),
			-2px -2px 14px rgb(255, 255, 255, 0.5);
		box-shadow:
			2px 2px 14px rgb(0, 0, 0, 0.5),
			-2px -2px 14px rgb(255, 255, 255, 0.5);
		color: white;
		-webkit-transition: 500ms;
		transition: 500ms;
	}

	.neu-button:disabled {
		box-shadow:
			inset 2px 2px 4px rgb(0, 0, 0, 0.2),
			inset -2px -2px 4px rgb(255, 255, 255, 0.2);
		color: white;
		-webkit-transition: 100ms;
		transition: 100ms;
	}
</style>
